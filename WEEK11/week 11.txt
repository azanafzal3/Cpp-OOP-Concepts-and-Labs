
// For a single object COMPOSITION

/*
#include<iostream>
using namespace std;

class room
{
    int color;
    int windows;

public:
    room(int c, int w) : color(c), windows(w)
    {
        cout << "Room created..." << endl;
    }

    void printR()
    {
        cout << "Color code: " << color << endl;
        cout << "Windows: " << windows << endl;
    }

};

class house
{
    room r1;
    int area;

public:
    house(int c, int w, int a) : r1(c, w), area(a)
    {
        cout << "House created..." << endl;
    }

    void printing()
    {
        r1.printR();
        cout << "With area: " << area << endl;
    }

};

int main()
{
    house h(1, 2, 100);
    h.printing();
    return 0;
}
*/





// for multiple objects
/*
#include<iostream>
using namespace std;

class room
{
    int color;
    int windows;

public:
    room(int c, int w) : color(c), windows(w)
    {
        cout << "Room created..." << endl;
    }

    void printR()
    {
        cout << "Color code: " << color << endl;
        cout << "Windows: " << windows << endl;
    }

    ~room()
    {
        cout << "Room destroyed..." << endl;
    }
};

class house
{
    room r1;
    room r2;
    int area;

public:
    house(int c1, int w1, int a1 , int c2, int w2, int a2 ) : r1(c1, w1), r2(c2, w2), area(a1)
    {
        cout << "House created..." << endl;
    }

    void printing()
    {
        cout << "For r1: ";
        r1.printR();
        cout << "For r2: ";
        r2.printR();
        cout << "With area: " << area << endl;
    }

    ~house()
    {
        cout << "house destroyed..." << endl;
    }
};

int main()
{
    house h(1, 2, 100, 2, 4, 200);
    h.printing();
    return 0;
}
*/


// AGGREGATION 
#include<iostream>
#include<string>
using namespace std;

class employee
{

    string name;
    int salary;
   
public:
    employee(string n, int s): name(n),salary(s)
    {
        cout << "Employee created..." << endl;
    }

    void print()
    {
        cout << "Name: " << name << endl;
        cout << "Salary: " << salary << endl;
    }

};


class department
{
    string dName;
    employee* e1;
    employee* e2;
public:
    department(string d, string n1, int s1, string n2, int s2): dName(d)
    {
        e1 = new employee(n1, s1);
        e2 = new employee(n2, s2);
        cout << "Department created..." << endl;
    }


    void printD()
    {
        cout << "Department name: " << dName << endl;
        e1->print();
        e2->print();
    }

    ~department()
    {
        cout << "Department destroyed..." << endl;
    }

};

int main()
{
    department d("Sales", "Sara", 5000, "Sana", 6000);
    d.printD();
}